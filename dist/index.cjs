function e(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var r=/*#__PURE__*/e(require("sfs-node"));function t(e,r){try{var t=e()}catch(e){return r(e)}return t&&t.then?t.then(void 0,r):t}module.exports=function(e){var n=r.default({publicFolder:e.publicFolder,mask:e.mask,getFileById:e.getFileById,getFileByHash:e.getFileByHash,createFile:e.createFile,logger:e.logger}),o=n.resolveFilePath,i=n.urlToId,s=n.saveFile,l=n.deleteFileById;return{getFile:function(e,r){try{var n=e.protocol+"://"+e.get("host")+e.originalUrl,s=i(n);return Promise.resolve(t(function(){return Promise.resolve(o(s)).then(function(e){var t=e.filePath;r.setHeader("Content-Disposition",'inline; filename="'+e.fileName+'"'),r.status(200).sendFile(t)})},function(e){throw new Error(e)}))}catch(e){return Promise.reject(e)}},idToUrl:n.idToUrl,urlToId:i,saveFile:s,deleteFileByHash:n.deleteFileByHash,deleteFileById:l,deleteFile:function(e,r){try{return Promise.resolve(t(function(){var t=e.protocol+"://"+e.get("host")+e.originalUrl,n=i(t);return Promise.resolve(l(n)).then(function(){return r.status(200).send("ok")})},function(e){throw new Error(e)}))}catch(e){return Promise.reject(e)}},getDiskUsage:n.getDiskUsage,uploadFile:function(e,r,n){void 0===n&&(n={pathParamKey:"path",fileParamKey:"file"});try{if(!e.files)return Promise.resolve(r.status(400).send("Request doesn't contain any files"));var o=n.pathParamKey,i=n.fileParamKey;return Promise.resolve(t(function(){return console.log(e.files),Promise.resolve(s(e.files[i],e.body[o])).then(function(e){return r.status(200).send(e)})},function(e){throw new Error(e)}))}catch(e){return Promise.reject(e)}},uploadFiles:function(e,r,n){void 0===n&&(n={pathParamKey:"path"});try{if(!e.files)return Promise.resolve(r.status(400).send("Request doesn't contain any files"));var o=n.pathParamKey;return Promise.resolve(t(function(){var t=e.body[o],n=[];return Object.values(e.files).forEach(function(e){Array.isArray(e)?n.push.apply(n,e):n.push(e)}),Promise.resolve(Promise.all(n.map(function(e){return s(e,t)}))).then(function(e){return r.status(200).send(e)})},function(e){throw new Error(e)}))}catch(e){return Promise.reject(e)}}}};
//# sourceMappingURL=index.cjs.map
