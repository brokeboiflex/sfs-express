function e(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var r=/*#__PURE__*/e(require("sfs-node"));function t(e,r){try{var t=e()}catch(e){return r(e)}return t&&t.then?t.then(void 0,r):t}module.exports=function(e){var n=r.default({publicFolder:e.publicFolder,mask:e.mask,getFileById:e.getFileById,getFileByHash:e.getFileByHash,createFile:e.createFile,logger:e.logger,allowDuplicates:e.allowDuplicates}),s=n.resolveFilePath,o=n.idToUrl,i=n.urlToId,a=n.saveFile,l=n.deleteFileByHash,u=n.deleteFileById,c=n.getDiskUsage,d=new Set;return{getFile:function(e,r){try{var n=e.protocol+"://"+e.get("host")+e.originalUrl;if(d.has(n))return Promise.resolve(r.status(425));var o=i(n);return Promise.resolve(t(function(){return Promise.resolve(s(o)).then(function(e){var t=e.filePath;return r.setHeader("Content-Disposition",'inline; filename="'+e.fileName+'"'),r.status(200).sendFile(t)})},function(){return r.status(404).send()}))}catch(e){return Promise.reject(e)}},idToUrl:o,urlToId:i,saveFile:a,prepareOptimisticUpload:function(e,r){try{var t=i(e.body.id);try{return d.add(t),Promise.resolve(r.status(200).send(t))}catch(e){return console.error(e),Promise.resolve(r.status(500).send())}}catch(e){return Promise.reject(e)}},deleteFileByHash:l,deleteFileById:u,deleteFile:function(e,r){try{return Promise.resolve(t(function(){var t=e.protocol+"://"+e.get("host")+e.originalUrl,n=i(t);return Promise.resolve(u(n)).then(function(){return r.status(200).send("ok")})},function(e){return console.error(e),r.status(500).send()}))}catch(e){return Promise.reject(e)}},getDiskUsage:c,uploadFile:function(e,r,n){void 0===n&&(n={pathParamKey:"path",fileParamKey:"file",optimisticIdKey:"id"});try{if(!e.files)return Promise.resolve(r.status(400).send("Request doesn't contain any files"));var s,i=e.files[n.fileParamKey],l=e.body[n.pathParamKey],u=e.body[n.optimisticIdKey];return Promise.resolve(t(function(){return u&&(s=o(u)),Promise.resolve(a(i,l,u)).then(function(e){return e&&s&&d.delete(s),r.status(200).send(e)})},function(e){return console.error(e),s&&d.delete(s),r.status(500).send()}))}catch(e){return Promise.reject(e)}},uploadFiles:function(e,r,n){void 0===n&&(n={pathParamKey:"path"});try{if(!e.files)return Promise.resolve(r.status(400).send("Request doesn't contain any files"));var s=n.pathParamKey;return Promise.resolve(t(function(){var t=e.body[s],n=[];return Object.values(e.files).forEach(function(e){Array.isArray(e)?n.push.apply(n,e):n.push(e)}),Promise.resolve(Promise.all(n.map(function(e){return a(e,t)}))).then(function(e){return r.status(200).send(e)})},function(e){return console.error(e),r.status(500).send()}))}catch(e){return Promise.reject(e)}}}};
//# sourceMappingURL=index.cjs.map
