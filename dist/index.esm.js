import e from"sfs-node";function r(e,r){try{var t=e()}catch(e){return r(e)}return t&&t.then?t.then(void 0,r):t}function t(t){var n=e({publicFolder:t.publicFolder,mask:t.mask,getFileById:t.getFileById,getFileByHash:t.getFileByHash,createFile:t.createFile,logger:t.logger}),s=n.resolveFilePath,o=n.idToUrl,i=n.urlToId,a=n.saveFile,l=n.deleteFileByHash,u=n.deleteFileById,c=n.getDiskUsage,d=new Set;return{getFile:function(e,t){try{var n=e.protocol+"://"+e.get("host")+e.originalUrl;if(d.has(n))return Promise.resolve(t.status(425));var o=i(n);return Promise.resolve(r(function(){return Promise.resolve(s(o)).then(function(e){var r=e.filePath;return t.setHeader("Content-Disposition",'inline; filename="'+e.fileName+'"'),t.status(200).sendFile(r)})},function(){return t.status(404).send()}))}catch(e){return Promise.reject(e)}},idToUrl:o,urlToId:i,saveFile:a,deleteFileByHash:l,deleteFileById:u,deleteFile:function(e,t){try{return Promise.resolve(r(function(){var r=e.protocol+"://"+e.get("host")+e.originalUrl,n=i(r);return Promise.resolve(u(n)).then(function(){return t.status(200).send("ok")})},function(e){return console.error(e),t.status(500).send()}))}catch(e){return Promise.reject(e)}},getDiskUsage:c,uploadFile:function(e,t,n){void 0===n&&(n={pathParamKey:"path",fileParamKey:"file",optimisticIdKey:"id"});try{if(!e.files)return Promise.resolve(t.status(400).send("Request doesn't contain any files"));var s=e.files[n.fileParamKey],i=e.body[n.pathParamKey],l=e.body[n.optimisticIdKey];return Promise.resolve(r(function(){return console.log(e.files),l&&d.add(o(l)),Promise.resolve(a(s,i,l)).then(function(e){return e&&d.delete(l),t.status(200).send(e)})},function(e){return console.error(e),d.delete(l),t.status(500).send()}))}catch(e){return Promise.reject(e)}},uploadFiles:function(e,t,n){void 0===n&&(n={pathParamKey:"path"});try{if(!e.files)return Promise.resolve(t.status(400).send("Request doesn't contain any files"));var s=n.pathParamKey;return Promise.resolve(r(function(){var r=e.body[s],n=[];return Object.values(e.files).forEach(function(e){Array.isArray(e)?n.push.apply(n,e):n.push(e)}),Promise.resolve(Promise.all(n.map(function(e){return a(e,r)}))).then(function(e){return t.status(200).send(e)})},function(e){return console.error(e),t.status(500).send()}))}catch(e){return Promise.reject(e)}}}}export{t as default};
//# sourceMappingURL=index.esm.js.map
