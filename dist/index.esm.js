import e from"sfs-node";function r(e,r){try{var t=e()}catch(e){return r(e)}return t&&t.then?t.then(void 0,r):t}function t(t){var s=t.logger,n=e({publicFolder:t.publicFolder,mask:t.mask,getFileById:t.getFileById,getFileByHash:t.getFileByHash,createFile:t.createFile,logger:s,allowDuplicates:t.allowDuplicates}),o=n.resolveFilePath,i=n.idToUrl,a=n.urlToId,l=n.saveFile,u=n.deleteFileByHash,c=n.deleteFileById,d=n.getDiskUsage,f=new Set;return{getFile:function(e,t){try{var n=e.protocol+"://"+e.get("host")+e.originalUrl;if(s&&s("SFS Express: trying to return requested file: "+n),f.has(n))return Promise.resolve(t.status(428));var i=a(n);return Promise.resolve(r(function(){return Promise.resolve(o(i)).then(function(e){var r=e.filePath,n=e.fileName;return s&&s("SFS Express: sedning file '"+n+"' with path '"+r+"'"),t.setHeader("Content-Disposition",'inline; filename="'+n+'"'),t.status(200).sendFile(r)})},function(e){return s&&s("SFS Express: unable to return file"+n),s&&s(e),console.error(e),t.status(404).send()}))}catch(e){return Promise.reject(e)}},idToUrl:i,urlToId:a,saveFile:l,prepareOptimisticUpload:function(e,r){try{var t=i(e.body.id);try{return f.add(t),Promise.resolve(r.status(200).send(t))}catch(e){return console.error(e),Promise.resolve(r.status(500).send())}}catch(e){return Promise.reject(e)}},deleteFileByHash:u,deleteFileById:c,deleteFile:function(e,t){try{return Promise.resolve(r(function(){var r=e.protocol+"://"+e.get("host")+e.originalUrl,s=a(r);return Promise.resolve(c(s)).then(function(){return t.status(200).send("ok")})},function(e){return console.error(e),t.status(500).send()}))}catch(e){return Promise.reject(e)}},getDiskUsage:d,uploadFile:function(e,t,s){void 0===s&&(s={pathParamKey:"path",fileParamKey:"file",optimisticIdKey:"id"});try{if(!e.files)return Promise.resolve(t.status(400).send("Request doesn't contain any files"));var n,o=e.files[s.fileParamKey],a=e.body[s.pathParamKey],u=e.body[s.optimisticIdKey];return Promise.resolve(r(function(){return u&&(n=i(u)),Promise.resolve(l(o,a,u)).then(function(e){return e&&n&&f.delete(n),t.status(200).send(e)})},function(e){return console.error(e),n&&f.delete(n),t.status(500).send()}))}catch(e){return Promise.reject(e)}},uploadFiles:function(e,t,s){void 0===s&&(s={pathParamKey:"path"});try{if(!e.files)return Promise.resolve(t.status(400).send("Request doesn't contain any files"));var n=s.pathParamKey;return Promise.resolve(r(function(){var r=e.body[n],s=[];return Object.values(e.files).forEach(function(e){Array.isArray(e)?s.push.apply(s,e):s.push(e)}),Promise.resolve(Promise.all(s.map(function(e){return l(e,r)}))).then(function(e){return t.status(200).send(e)})},function(e){return console.error(e),t.status(500).send()}))}catch(e){return Promise.reject(e)}}}}export{t as default};
//# sourceMappingURL=index.esm.js.map
